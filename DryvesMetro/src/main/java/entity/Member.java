package entity;
// Generated 22-apr-2013 22:04:37 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Member generated by hbm2java
 */
@Entity
@Table(name="member"
    ,catalog="dryves"
    , uniqueConstraints = @UniqueConstraint(columnNames="email") 
)
public class Member  implements java.io.Serializable {


     private Integer idMember;
     private Member member;
     private String alias;
     private String password;
     private String firstName;
     private String adjective;
     private String lastName;
     private String email;
     private Double avgRating;
     private String city;
     private Set<Car> cars = new HashSet<Car>(0);
     private Set<Rating> ratings = new HashSet<Rating>(0);
     private Set<Negotiation> negotiations = new HashSet<Negotiation>(0);
     private Set<Message> messagesForIdMemberReciever = new HashSet<Message>(0);
     private Set<Message> messagesForIdMemberSender = new HashSet<Message>(0);
     private Set<Ride> rides = new HashSet<Ride>(0);
     private Set<Member> members = new HashSet<Member>(0);
     private Set<Admin> admins = new HashSet<Admin>(0);

    public Member() {
    }

	
    public Member(Member member, String alias, String password, String firstName, String lastName, String email, String city) {
        this.member = member;
        this.alias = alias;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.city = city;
    }
    public Member(Member member, String alias, String password, String firstName, String adjective, String lastName, String email, Double avgRating, String city, Set<Car> cars, Set<Rating> ratings, Set<Negotiation> negotiations, Set<Message> messagesForIdMemberReciever, Set<Message> messagesForIdMemberSender, Set<Ride> rides, Set<Member> members, Set<Admin> admins) {
       this.member = member;
       this.alias = alias;
       this.password = password;
       this.firstName = firstName;
       this.adjective = adjective;
       this.lastName = lastName;
       this.email = email;
       this.avgRating = avgRating;
       this.city = city;
       this.cars = cars;
       this.ratings = ratings;
       this.negotiations = negotiations;
       this.messagesForIdMemberReciever = messagesForIdMemberReciever;
       this.messagesForIdMemberSender = messagesForIdMemberSender;
       this.rides = rides;
       this.members = members;
       this.admins = admins;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idMember", unique=true, nullable=false)
    public Integer getIdMember() {
        return this.idMember;
    }
    
    public void setIdMember(Integer idMember) {
        this.idMember = idMember;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idFriend", nullable=false)
    public Member getMember() {
        return this.member;
    }
    
    public void setMember(Member member) {
        this.member = member;
    }
    
    @Column(name="alias", nullable=false)
    public String getAlias() {
        return this.alias;
    }
    
    public void setAlias(String alias) {
        this.alias = alias;
    }
    
    @Column(name="password", nullable=false, length=45)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="firstName", nullable=false, length=45)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    
    @Column(name="adjective", length=45)
    public String getAdjective() {
        return this.adjective;
    }
    
    public void setAdjective(String adjective) {
        this.adjective = adjective;
    }
    
    @Column(name="lastName", nullable=false, length=45)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
    
    @Column(name="email", unique=true, nullable=false)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="avgRating", precision=22, scale=0)
    public Double getAvgRating() {
        return this.avgRating;
    }
    
    public void setAvgRating(Double avgRating) {
        this.avgRating = avgRating;
    }
    
    @Column(name="city", nullable=false, length=45)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="member")
    public Set<Car> getCars() {
        return this.cars;
    }
    
    public void setCars(Set<Car> cars) {
        this.cars = cars;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="member")
    public Set<Rating> getRatings() {
        return this.ratings;
    }
    
    public void setRatings(Set<Rating> ratings) {
        this.ratings = ratings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="member")
    public Set<Negotiation> getNegotiations() {
        return this.negotiations;
    }
    
    public void setNegotiations(Set<Negotiation> negotiations) {
        this.negotiations = negotiations;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="memberByIdMemberReciever")
    public Set<Message> getMessagesForIdMemberReciever() {
        return this.messagesForIdMemberReciever;
    }
    
    public void setMessagesForIdMemberReciever(Set<Message> messagesForIdMemberReciever) {
        this.messagesForIdMemberReciever = messagesForIdMemberReciever;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="memberByIdMemberSender")
    public Set<Message> getMessagesForIdMemberSender() {
        return this.messagesForIdMemberSender;
    }
    
    public void setMessagesForIdMemberSender(Set<Message> messagesForIdMemberSender) {
        this.messagesForIdMemberSender = messagesForIdMemberSender;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="member")
    public Set<Ride> getRides() {
        return this.rides;
    }
    
    public void setRides(Set<Ride> rides) {
        this.rides = rides;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="member")
    public Set<Member> getMembers() {
        return this.members;
    }
    
    public void setMembers(Set<Member> members) {
        this.members = members;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="member")
    public Set<Admin> getAdmins() {
        return this.admins;
    }
    
    public void setAdmins(Set<Admin> admins) {
        this.admins = admins;
    }




}


