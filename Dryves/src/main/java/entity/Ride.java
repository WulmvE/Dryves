package entity;
// Generated 22-apr-2013 22:04:37 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ride generated by hbm2java
 */
@Entity
@Table(name="ride"
    ,catalog="dryves"
)
public class Ride  implements java.io.Serializable {


     private Integer idRide;
     private Member member;
     private Car car;
     private String startLocation;
     private String endLocation;
     private Date departureDate;
     private Date departureTime;
     private double askingPrice;
     private String seatsAvailable;
     private boolean status;
     private Set<Negotiation> negotiations = new HashSet<Negotiation>(0);

    public Ride() {
    }

	
    public Ride(Member member, Car car, String startLocation, String endLocation, Date departureDate, Date departureTime, double askingPrice, String seatsAvailable, boolean status) {
        this.member = member;
        this.car = car;
        this.startLocation = startLocation;
        this.endLocation = endLocation;
        this.departureDate = departureDate;
        this.departureTime = departureTime;
        this.askingPrice = askingPrice;
        this.seatsAvailable = seatsAvailable;
        this.status = status;
    }
    public Ride(Member member, Car car, String startLocation, String endLocation, Date departureDate, Date departureTime, double askingPrice, String seatsAvailable, boolean status, Set<Negotiation> negotiations) {
       this.member = member;
       this.car = car;
       this.startLocation = startLocation;
       this.endLocation = endLocation;
       this.departureDate = departureDate;
       this.departureTime = departureTime;
       this.askingPrice = askingPrice;
       this.seatsAvailable = seatsAvailable;
       this.status = status;
       this.negotiations = negotiations;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idRide", unique=true, nullable=false)
    public Integer getIdRide() {
        return this.idRide;
    }
    
    public void setIdRide(Integer idRide) {
        this.idRide = idRide;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idMember", nullable=false)
    public Member getMember() {
        return this.member;
    }
    
    public void setMember(Member member) {
        this.member = member;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCar", nullable=false)
    public Car getCar() {
        return this.car;
    }
    
    public void setCar(Car car) {
        this.car = car;
    }
    
    @Column(name="startLocation", nullable=false, length=45)
    public String getStartLocation() {
        return this.startLocation;
    }
    
    public void setStartLocation(String startLocation) {
        this.startLocation = startLocation;
    }
    
    @Column(name="endLocation", nullable=false, length=45)
    public String getEndLocation() {
        return this.endLocation;
    }
    
    public void setEndLocation(String endLocation) {
        this.endLocation = endLocation;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="departureDate", nullable=false, length=10)
    public Date getDepartureDate() {
        return this.departureDate;
    }
    
    public void setDepartureDate(Date departureDate) {
        this.departureDate = departureDate;
    }
    @Temporal(TemporalType.TIME)
    @Column(name="departureTime", nullable=false, length=8)
    public Date getDepartureTime() {
        return this.departureTime;
    }
    
    public void setDepartureTime(Date departureTime) {
        this.departureTime = departureTime;
    }
    
    @Column(name="askingPrice", nullable=false, precision=22, scale=0)
    public double getAskingPrice() {
        return this.askingPrice;
    }
    
    public void setAskingPrice(double askingPrice) {
        this.askingPrice = askingPrice;
    }
    
    @Column(name="seatsAvailable", nullable=false, length=45)
    public String getSeatsAvailable() {
        return this.seatsAvailable;
    }
    
    public void setSeatsAvailable(String seatsAvailable) {
        this.seatsAvailable = seatsAvailable;
    }
    
    @Column(name="status", nullable=false)
    public boolean isStatus() {
        return this.status;
    }
    
    public void setStatus(boolean status) {
        this.status = status;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="ride")
    public Set<Negotiation> getNegotiations() {
        return this.negotiations;
    }
    
    public void setNegotiations(Set<Negotiation> negotiations) {
        this.negotiations = negotiations;
    }




}


